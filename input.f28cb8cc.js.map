{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAC7BC,MAAOF,SAASC,cAAc,oBAIhCE,EAAAP,GAASQ,OAAOC,KAAK,CACnBC,MAAO,QACPC,SAAU,aACVC,SAAU,MACVC,QAAS,IACTC,WAAY,SACZC,UAAW,SACXC,WAAY,MACZC,SAAU,OACVC,QAAS,IACTC,kBAAmB,WACnBC,SAAS,EACTC,qBAAsB,IAExBC,QAAS,CACLC,WAAY,OACZC,UAAW,UACXC,eAAgB,0BAChBC,qBAAsB,sBACtBC,qBAAsB,kBACtBC,iBAAkB,UAMtB,IAAIC,EAAU,GAGd,SAASC,IACP,OAAOC,MAAM,8FAA8CF,KACtDG,MAAMC,IACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,+BAEpB,OAAOF,EAASG,MAAM,IAEzBJ,MAAMK,IACLC,QAAQC,IAAIF,EAAKG,SAmBzB,SAAgBH,GAEd,GADFC,QAAQC,IAAIF,GACmB,IAAxBA,EAAKG,QAAQC,OACPlC,EAAAP,GAASQ,OAAOc,QACf,iE,CAtBNoB,CAAOL,GACEA,EAAKG,WAEfG,OAAOC,IACJN,QAAQM,MAAM,sDAAuDA,EAAM,G,CAhBrF1C,EAAKC,KAAK0C,iBAAiB,UAqB3B,SAAiBC,GACfA,EAAEC,iBACFT,QAAQC,IAAIO,EAAEE,OAAOC,SAASC,YAAYC,OAC1CtB,EAAUiB,EAAEE,OAAOC,SAASC,YAAYC,MAAMC,OAE9CtB,G,IAPFQ,QAAQC,IAAIT","sources":["src/input.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.input'),\n  input: document.querySelector('.input-position'),\n\n}\n\nNotiflix.Notify.init({\n  width: '320px',\n  position: 'center-top',\n  distance: '5px',\n  opacity: '1',\n  fontFamily: 'Roboto',\n  fontStyle: 'normal',\n  fontWeight: '400',\n  fontSize: '14px',\n  timeout: 4000,\n  cssAnimationStyle: 'from-top',\n  useIcon: false,\n  cssAnimationDuration: 1000,\n\nfailure: {\n    background: '#000',\n    textColor: '#FF001B',\n    childClassName: 'notiflix-notify-failure',\n    fontAwesomeClassName: 'fas fa-times-circle',\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n    backOverlayColor: 'none',\n  // ...\n}});\n\nconst URL = 'https://api.themoviedb.org/3';\nconst KEY = 'cf961b1b89f4c4a28558be2b04fdd59a';\nlet inputOn = '';\nrefs.form.addEventListener('submit', onInput);\n\nfunction fetchFilmsAPI() {\n  return fetch(`${URL}/search/keyword?api_key=${KEY}&query=${inputOn}`)\n      .then((response) => {\n          if (!response.ok) {\n              throw new Error('Network response was not OK');\n          }\n          return response.json();\n      })\n      .then((data) => {\n        console.log(data.results)\n        onList(data);\n          return data.results;\n      })\n      .catch((error) => {\n          console.error('There has been a problem with your fetch operation:', error);\n      });\n}\nconsole.log(fetchFilmsAPI())\n\nfunction onInput(e) {\n  e.preventDefault();\n  console.log(e.target.elements.searchQuery.value)\n  inputOn = e.target.elements.searchQuery.value.trim();\n  // newsApiServer.resetPage();\n  fetchFilmsAPI()\n}\n  \n\nfunction onList(data) {\nconsole.log(data);\n  if ( data.results.length === 0) {\n      return Notiflix.Notify.failure(\n              'Search result not successful. Enter the correct movie name and'\n            );\n    }\n  } "],"names":["$eWCmQ","parcelRequire","$566e0e012eb818ad$var$refs","form","document","querySelector","input","$parcel$interopDefault","Notify","init","width","position","distance","opacity","fontFamily","fontStyle","fontWeight","fontSize","timeout","cssAnimationStyle","useIcon","cssAnimationDuration","failure","background","textColor","childClassName","fontAwesomeClassName","fontAwesomeIconColor","backOverlayColor","$566e0e012eb818ad$var$inputOn","$566e0e012eb818ad$var$fetchFilmsAPI","fetch","then","response","ok","Error","json","data","console","log","results","length","$566e0e012eb818ad$var$onList","catch","error","addEventListener","e","preventDefault","target","elements","searchQuery","value","trim"],"version":3,"file":"input.f28cb8cc.js.map"}